---
import "leaflet/dist/leaflet.css";
import populationMain from "../assets/populationMain.json";
import Layout from "../layouts/Layout.astro";

const listePeriode = [
  ...new Set(populationMain?.map((d) => d.Période)),
].reverse();
---

<Layout>
  <main class="max-w-5xl mx-auto p-8">
    <h1 class="text-3xl font-bold mb-6 text-gray-800">Population (TP)</h1>

    <div class="mb-6">
      <label for="periode" class="block text-sm font-medium text-gray-700 mb-1">
        Choisir une année :
      </label>
      <select
        id="periode"
        class="border border-gray-300 rounded-md px-3 py-2 text-gray-700 focus:ring-2 focus:ring-blue-500"
      >
        {listePeriode.map((p, i) => <option selected={i === 0}>{p}</option>)}
      </select>
    </div>

    <!-- Carte Leaflet -->
    <div
      id="map"
      style="height: 600px; border-radius: 10px; position: relative;"
      class="border border-gray-300 shadow-sm"
    >
      <!-- Overlay d’infos sur la carte -->
      <div id="info-box"
        style="position:absolute; top:20px; right:20px; background:white; padding:12px 16px; border-radius:8px; box-shadow:0 2px 8px rgba(0,0,0,0.2); z-index:1000;"
      >
        <h3 style="font-weight:bold; margin-bottom:4px;">Statistiques population</h3>
        <p id="info-content" style="font-size:14px; color:#333;">Chargement...</p>
      </div>
    </div>
  </main>

  <script>

    import("leaflet").then((L) => {

      const map = L.map("map").setView([46.6033, 1.883], 6);

      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        maxZoom: 19,
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(map);

      // Injecte les données
      const data = JSON.parse(`<!-- inject data -->
        ${JSON.stringify(populationMain)}
      `);

      // Fonction pour calculer les stats selon l’année sélectionnée
      function afficherPopulation(annee) {
        const filtered = data.filter((d) => d.Période === annee && d.Valeur);
        const total = filtered.reduce((sum, d) => sum + d.Valeur, 0);
        const nbDep = new Set(filtered.map((d) => d["Géographie"])).size;

        const info = document.getElementById("info-content");
        info.innerHTML = `
          <b>Année ${annee}</b><br>
          ${nbDep} départements<br>
          Population totale : <b>${total.toLocaleString("fr-FR")}</b>
        `;
      }

      const elmYear = document.getElementById("periode");
      let selectedYear = Number(elmYear.value);
      afficherPopulation(selectedYear);

      elmYear.addEventListener("change", () => {
        selectedYear = Number(elmYear.value);
        afficherPopulation(selectedYear);
      });
    });
  </script>
</Layout>
